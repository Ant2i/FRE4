 if(WIN32)
    foreach(WINKIT "KitsRoot81" "KitsRoot")
      get_filename_component(WINKIT_DIR "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;${WINKIT}]" ABSOLUTE)
      if(EXISTS ${WINKIT_DIR})
        if (PLATFORM_AMD64)
          set(WINKIT_ARCH "x64")
        elseif(PLATFORM_X86)
          set(WINKIT_ARCH "x86")
        else()
          message(FATAL "unsupported architecture")
        endif()

        find_path(WINKIT_LIB GlU32.lib PATHS "${WINKIT_DIR}/Lib/win8/um/${WINKIT_ARCH}" "${WINKIT_DIR}/Lib/winv6.3/um/${WINKIT_ARCH}")

        list(APPEND CMAKE_PREFIX_PATH "${WINKIT_LIB}")
        message("Using Windows Kit ${WINKIT_DIR}")
        set(WINKIT_FOUND TRUE)
        break()
      endif()
    endforeach()

    if (NOT ${WINKIT_FOUND})
      message("Windows Kit not found. Qt might not find glu32.lib")
    endif()
  endif()

  if (MSVC11)
    set(QtCompiler "msvc2012")
  elseif(MSVC12)
    set(QtCompiler "msvc2013")
  elseif(MSVC14)
    set(QtCompiler "msvc2015")
  endif()

  if (PLATFORM_AMD64)
    set(QtArch "_64")
  endif()

  if (QtCompiler)
    set(QtRegistryKey
     "[HKEY_CURRENT_USER\\Software\\Classes\\Applications\\QtProject.QtCreator.pro\\shell\\Open\\Command]"
    )
    get_filename_component(QtRoot ${QtRegistryKey} REALPATH)
    string( REPLACE "/Tools/QtCreator/bin/qtcreator.exe -client \"%1\"" "" QtRoot "${QtRoot}" )
    if (EXISTS ${QtRoot})
      message("Qt installation: ${QtRoot}")

      set(QtVersions 5.7 5.6 5.5 5.4 5.3 5.2.1)
      foreach(QtVersion ${QtVersions})
        set(QtPath "${QtRoot}/${QtVersion}/${QtCompiler}${QtArch}/lib/cmake")
        if (EXISTS ${QtPath})
          message("Using Qt ${QtVersion}: ${QtRoot}/${QtVersion}/${QtCompiler}${QtArch}")
          list(APPEND CMAKE_PREFIX_PATH ${QtPath})
          set(QtFound TRUE)
          break()
        endif()
        if (QtFound)
          break()
        endif()
      endforeach()
    endif()
  endif()