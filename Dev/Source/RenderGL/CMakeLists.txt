CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(PROJECT_NAME GLRenderDevice)

FILE(GLOB HEADER_FILES *.h)
FILE(GLOB SOURCE_FILES *.cpp)

SET(OPENGL_INCLUDE_EXT_DIR ${FRE_EXTERNAL_PATH}/OpenGL)

IF (WIN32)
	SET(PLATFORM_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Win)
	FILE(GLOB PLATFORM_HEADERS Win/*.h)
	FILE(GLOB PLATFORM_SOURCES Win/*.cpp)
	
	#source_group(Test REGULAR_EXPRESSION "FOpenGL.*API")
	#source_group(FflatformWinSource FILES ${PLATFORM_SOURCES})
ELSEIF (APPLE)
	FIND_LIBRARY(COCOA_LIBRARY Cocoa)
	MARK_AS_ADVANCED(COCOA_LIBRARY)
	
	SET(PLATFORM_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/OSX)
	FILE(GLOB PLATFORM_HEADERS OSX/*.*)
ENDIF()

FIND_PACKAGE(OpenGL REQUIRED)

INCLUDE_DIRECTORIES(
	${FRE_DEV_DIRS}
	${CMAKE_CURRENT_SOURCE_DIR}
	${PLATFORM_INCLUDE_DIR}
	${OPENGL_INCLUDE_EXT_DIR}
	${OPENGL_INCLUDE_DIR})

ADD_DEFINITIONS(-D_USE_MATH_DEFINES)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADERS} ${PLATFORM_SOURCES})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OPENGL_LIBRARIES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${ENGINE_NAME})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${EXTRA_LIBS})

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION "C:\\Temp\\FRE_INSTALL")