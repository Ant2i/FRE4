cmake_minimum_required(VERSION 2.8)

set(PROJECT_NAME GLRenderDevice)

file(GLOB HEADER_FILES *.h)
file(GLOB SOURCE_FILES *.cpp)

set(OPENGL_INCLUDE_EXT_DIR ${FRE_EXTERNAL_PATH}/OpenGL)

if (WIN32)
	set(PLATFORM_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Win)
	file(GLOB PLATFORM_HEADERS Win/*.h)
	file(GLOB PLATFORM_SOURCES Win/*.cpp)

	#source_group(Test REGULAR_EXPRESSION "FOpenGL.*API")
	#source_group(FflatformWinSource FILES ${PLATFORM_SOURCES})
	find_package(GLEW REQUIRED)
	
elseif (APPLE)

	FIND_LIBRARY(COCOA_LIBRARY Cocoa)
	MARK_AS_ADVANCED(COCOA_LIBRARY)
	SET(EXTRA_LIBS ${COCOA_LIBRARY})

	set(PLATFORM_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/OSX)
	file(GLOB PLATFORM_HEADERS OSX/*.*)
	#file(GLOB PLATFORM_SOURCES OSX/*.cpp)
	find_package(GLEW REQUIRED)
endif()

find_package(OpenGL REQUIRED)

include_directories(
	${FRE_DEV_DIRS}
	${CMAKE_CURRENT_SOURCE_DIR}
	${PLATFORM_INCLUDE_DIR}
	${OPENGL_INCLUDE_EXT_DIR}
	${OPENGL_INCLUDE_DIR}
	${GLEW_INCLUDE_DIRS})

add_definitions(-D_USE_MATH_DEFINES)

add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADERS} ${PLATFORM_SOURCES})

#message(${GLEW_LIBRARIES})

target_link_libraries(${PROJECT_NAME} ${OPENGL_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${GLEW_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${ENGINE_NAME})
target_link_libraries(${PROJECT_NAME} ${EXTRA_LIBS})

install(TARGETS ${PROJECT_NAME} DESTINATION "C:\\Temp\\FRE_INSTALL")