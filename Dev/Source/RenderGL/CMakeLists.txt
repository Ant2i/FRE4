cmake_minimum_required(VERSION 2.8)

set(PROJECT_NAME GLRenderDevice)

file(GLOB HEADER_FILES *.h)
file(GLOB SOURCE_FILES *.cpp)

if (WIN32)

set(PLATFORM_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Win)
file(GLOB PLATFORM_HEADERS Win/*.h)
file(GLOB PLATFORM_SOURCES Win/*.cpp)

elseif (APPLE)

set(PLATFORM_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/OSX)
file(GLOB PLATFORM_HEADERS OSX/*.*)
#file(GLOB PLATFORM_SOURCES OSX/*.cpp)

endif()

find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)

include_directories(
	${FRE_DEV_DIRS}
	${CMAKE_CURRENT_SOURCE_DIR}
	${PLATFORM_INCLUDE_DIR}
	${OPENGL_INCLUDE_DIR}
	${GLEW_INCLUDE_DIRS})

add_definitions(-D_USE_MATH_DEFINES)

add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADERS} ${PLATFORM_SOURCES})

#message(${GLEW_LIBRARIES})

target_link_libraries(${PROJECT_NAME} ${OPENGL_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${GLEW_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${ENGINE_NAME})