CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

SET(PROJECT_NAME RGPImage)

FIND_PACKAGE(FreeImage REQUIRED)
FIND_PACKAGE(FPlatform REQUIRED)

FILE(GLOB_RECURSE HEADER_FILES Include/*.h)
FILE(GLOB_RECURSE SOURCE_FILES Source/*.cpp Source/*.h)

ADD_DEFINITIONS(-DRGP_IMAGE_EXPORTS -D_USE_MATH_DEFINES -D_IMAGE_EXPORTS)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES})

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} 
	PUBLIC
		${FPLATFORM_INCLUDE_DIR}
		Include
	PRIVATE 
		${FREEIMAGE_INCLUDE_DIR}
)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${FREEIMAGE_LIBRARY})

IF(UNIT_TEST)
	ADD_SUBDIRECTORY(UTest)
ENDIF()

#Copy FreeImage dll for run exe.
IF(WIN32)
	GET_FILENAME_COMPONENT(FREEIMAGE_BIN_DIRECTORY ${FREEIMAGE_LIBRARY} DIRECTORY)
	SET(FREEIMAGE_BIN ${FREEIMAGE_BIN_DIRECTORY}/FreeImage.dll)
	ADD_CUSTOM_COMMAND(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${FREEIMAGE_BIN} $<TARGET_FILE_DIR:${PROJECT_NAME}>)
ENDIF()

INSTALL(TARGETS ${PROJECT_NAME}
		RUNTIME DESTINATION	${APP_INSTALL_BIN}
		LIBRARY DESTINATION ${APP_INSTALL_LIB})

IF(WIN32 AND FREEIMAGE_BIN)
	INSTALL(FILES ${FREEIMAGE_BIN} DESTINATION ${APP_INSTALL_BIN})
ENDIF()

IF(USE_VS_SOLUTION_FOLDER)
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES FOLDER "RGPTools")
ENDIF()
