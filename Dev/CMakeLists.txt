CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(FRE4)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/CMake")

INCLUDE(CheckPlatform)
INCLUDE(GenerateAPI)

ENABLE_TESTING()

#some changes.
#CMake policy.
IF (POLICY CMP0053)
	cmake_policy(SET CMP0053 NEW)
ENDIF()

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

#Options
OPTION(unit_tests "Build unit tests." OFF)
OPTION(builds_demo "Build demo." OFF)

SET(engine_name "Fre")

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/Lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/Lib")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/Bin")

SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/Install)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Bin)

IF(PLATFORM_WIN)
	SET(MSVC_COMPILER_DEFS "-D_VARIADIC_MAX=10")
	ADD_DEFINITIONS(-DPLATFORM_WIN=1)
ELSEIF(PLATFORM_OSX)
	SET(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++11")
	SET(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")
	ADD_DEFINITIONS(-DPLATFORM_OSX=1)
ELSE()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fPIC")
	ADD_DEFINITIONS(-DPLATFORM_LINUX=1)
ENDIF()

ADD_SUBDIRECTORY(External)
ADD_SUBDIRECTORY(Source)

IF (builds_demo)
	ADD_SUBDIRECTORY(Demo)
ENDIF()

